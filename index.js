// Fun√ß√£o para calcular o saldo de vit√≥rias e determinar o n√≠vel
function calcularRank(vitorias, derrotas) {
  const saldoVitorias = vitorias - derrotas;
  let nivel;

  // Estruturas de decis√£o para definir o n√≠vel do jogador
  if (vitorias < 10) {
      nivel = "Ferro üõ†Ô∏è";
  } else if (vitorias >= 11 && vitorias <= 20) {
      nivel = "Bronze ü•â";
  } else if (vitorias >= 21 && vitorias <= 50) {
      nivel = "Prata ü•à";
  } else if (vitorias >= 51 && vitorias <= 80) {
      nivel = "Ouro ü•á";
  } else if (vitorias >= 81 && vitorias <= 90) {
      nivel = "Diamante üíé";
  } else if (vitorias >= 91 && vitorias <= 100) {
      nivel = "Lend√°rio üèÜ";
  } else if (vitorias >= 101) {
      nivel = "Imortal üëë";
  }

  return { saldoVitorias, nivel };
}

// Fun√ß√£o para calcular o hist√≥rico de vit√≥rias e derrotas
function calcularHistorico(partidas) {
  let totalVitorias = 0;
  let totalDerrotas = 0;

  for (let i = 0; i < partidas.length; i++) {
      totalVitorias += partidas[i].vitorias;
      totalDerrotas += partidas[i].derrotas;
  }

  const mediaVitorias = totalVitorias / partidas.length;
  const mediaDerrotas = totalDerrotas / partidas.length;

  return { mediaVitorias, mediaDerrotas };
}

// Fun√ß√£o para calcular a porcentagem de vit√≥rias
function calcularPorcentagem(vitorias, derrotas) {
  const totalPartidas = vitorias + derrotas;
  const porcentagemVitorias = (vitorias / totalPartidas) * 100;
  return porcentagemVitorias.toFixed(2);
}

// Fun√ß√£o para dar feedback de performance
function darFeedback(porcentagemVitorias) {
  if (porcentagemVitorias >= 80) {
      return "üèÜ Excelente! Voc√™ est√° dominando o campo de batalha!";
  } else if (porcentagemVitorias >= 60) {
      return "üî• √ìtimo trabalho! Continue assim e voc√™ vai longe!";
  } else if (porcentagemVitorias >= 40) {
      return "üëç Bom esfor√ßo, mas h√° espa√ßo para melhorar!";
  } else {
      return "ü§î Precisamos revisar a estrat√©gia. Voc√™ consegue melhorar!";
  }
}

// Fun√ß√£o principal que faz tudo junto
function mostrarResultadoJogador(partidas) {
  for (let i = 0; i < partidas.length; i++) {
      const { vitorias, derrotas } = partidas[i];
      const { saldoVitorias, nivel } = calcularRank(vitorias, derrotas);
      const porcentagemVitorias = calcularPorcentagem(vitorias, derrotas);
      const feedback = darFeedback(porcentagemVitorias);

      // Formata√ß√£o de sa√≠da personalizada
      console.log("\n-------------------------------------------");
      console.log(`üßô‚Äç‚ôÇÔ∏è Her√≥i ${i + 1}`);
      console.log(`Saldo de vit√≥rias: ${saldoVitorias} ‚öîÔ∏è`);
      console.log(`N√≠vel: ${nivel}`);
      console.log(`Porcentagem de vit√≥rias: ${porcentagemVitorias}% üèπ`);
      console.log(`Feedback: ${feedback}`);
      console.log("-------------------------------------------");
  }

  const historico = calcularHistorico(partidas);
  console.log("\nüìä Hist√≥rico Geral:");
  console.log(`M√©dia de vit√≥rias por partida: ${historico.mediaVitorias.toFixed(2)} üèÖ`);
  console.log(`M√©dia de derrotas por partida: ${historico.mediaDerrotas.toFixed(2)} üí•`);
}

// Exemplo de uso da fun√ß√£o
const partidas = [
  { vitorias: 15, derrotas: 5 },
  { vitorias: 50, derrotas: 25 },
  { vitorias: 105, derrotas: 30 }
];

// Chamar a fun√ß√£o principal
mostrarResultadoJogador(partidas);
